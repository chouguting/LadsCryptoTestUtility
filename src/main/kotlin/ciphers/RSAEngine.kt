package ciphers

import org.bouncycastle.jce.provider.BouncyCastleProvider
import java.math.BigInteger
import java.security.KeyFactory
import java.security.PrivateKey
import java.security.spec.RSAPrivateCrtKeySpec

class RSAEngine {
}

fun main() {
    val publicExponent = BigInteger("FE347CEE66557070F1028E9FF1C94083CF8654DF2FF1FF1E1CE588026264CAE1128AD517CDFAA3F2A06A9F21A350116D710015A77C8162E6BA2283A4E2FCCCA109EAE739F5928F6EB232A4ED645521A806333C167FF0DC098710B27591DDAA340DC8F358852A9FBCDD021612961C6986168EE111875983B16A55C5F153C2C15C", 16)
    val modulus = BigInteger("2047",10)
    val privateExponent = BigInteger("02CCF818A37B0F", 16)
    val primeP = BigInteger("00EB0F911D3D96F019E6CE07A20EFC629D46252748952DDE253DCC3220E5B62CF415308D49617379D06FCC531DCF4357B1D87242877724EA7958F390B76660E539EBD6E665AD3A0F88AD9E6D", 16)
    val primeQ = BigInteger("022D54A82736263EAA068A7EB78C8B5B820EB9", 16)
    val primeExponentP = BigInteger("3C78195ADA3FAA40A749E9F89550FF92F271", 16)
    val primeExponentQ = BigInteger("013BD49BACF700FF56DD6D987223EC2923E918392F9F7AC9B1D32CF4AC71EF771CA3CFC17B0C591CB695DF7C03437F5D50EDC22DCCC1287CFD50A80613B694365971DBF2813D16E516E4FA59", 16)
    val crtCoefficient = BigInteger("BCA02CCD103BE14614FC3E34D97644684DD8ABAB3C95A49E5DBCF53556D189657516E79E3435BE1C65CED587B266D483D7445BD7712BB536AD369E68F33504FC67AA91E5B7FBB832367E1C4D57EEB703A3B0A741480E2018BEE5A303907C1E70CFF3F1FCF689328E4C0F624B4FA68F6AB8A74394FB560A0ECE72D0488E59922C", 16)

    val keyFactory = KeyFactory.getInstance("RSA", BouncyCastleProvider())
    val privateKeySpec = RSAPrivateCrtKeySpec(modulus, publicExponent, privateExponent, primeP, primeQ, primeExponentP, primeExponentQ, crtCoefficient)
    val privateKey: PrivateKey = keyFactory.generatePrivate(privateKeySpec)

    println(privateKey)
}